# -*- coding: utf-8 -*-
"""Data analysis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qAHbx_bqmCjJeNfw_pyR9q6tVf14JRb9
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import files
uploaded=files.upload()

import pandas as pd
import io
df = pd.read_csv(io.BytesIO(uploaded['Diwali Sales Data.csv']),encoding='unicode_escape')
# print(df)
df.head(10)

df.shape

df.info()

# drop unrelated column
df.drop(['Status','unnamed1'],axis=1,inplace=True)

df.info()

pd.isnull(df)
# in below table null value will show true

pd.isnull(df).sum() # gives sum of null values

# drop null values
df.dropna(inplace=True) # inplace is used to save the droped null values

# checking
pd.isnull(df).sum()
# df.shape

# initialize the list of lists
data_test=[['madhav',11],['Gopi',15],['Lalita',17],['keshav',]]
# create the pandas dataframe using the list
df_test=pd.DataFrame(data_test,columns=['NAme','Age'])
df_test

df_test.dropna() # this only show after values are drop but not saved

df_test

df_test.dropna(inplace=True) # droped and saved

df_test

# changing datatype
df['Amount']=df['Amount'].astype('int')

df.info()

df.columns

df.rename(columns={'Martial_Status':'Shaadi'})

# describe() method returns description of the data in the Dataframe (i.e. count,mean,std etc)
df.describe()

df[['Age','Orders','Amount']].describe()

"""**Exploratory Data Analysis**

**Gender**
"""

df.columns

ax=sns.countplot(x='Gender',data=df)
for bars in ax.containers:   # for labeling the count values
  ax.bar_label(bars)

sales_gem=df.groupby(['Gender'],as_index=False)['Amount'].sum().sort_values(by='Amount',ascending=False)
sns.barplot(x='Gender',y='Amount',data=sales_gem)

"""**Age**"""

ax=sns.countplot(x='Age Group',data=df,hue='Gender') # hue divides value based on the given
for bars in ax.containers:
  ax.bar_label(bars)

sales_age=df.groupby(['Age Group'],as_index=False)['Amount'].sum().sort_values(by='Amount',ascending=False)
sns.barplot(x='Age Group',y='Amount',data=sales_age)

"""**State**"""

df.columns

sales_state=df.groupby(['State'],as_index=False)['Orders'].sum().sort_values(by='Orders',ascending=False).head(10)  # head is used to get top 5,10 whatever value is given
sns.set(rc={'figure.figsize':(20,5)})
sns.barplot(data=sales_state,x='State',y='Orders')

sales_state=df.groupby(['State'],as_index=False)['Amount'].sum().sort_values(by='Amount',ascending=False).head(10)  # head is used to get top 5,10 whatever value is given
sns.set(rc={'figure.figsize':(20,5)})
sns.barplot(data=sales_state,x='State',y='Amount')
# plt.title('Amount')

"""**Marital Status**"""

ax=sns.countplot(x='Marital_Status',data=df)
sns.set(rc={'figure.figsize':(7,4)})
for bars in ax.containers:
  ax.bar_label(bars)

sales_state=df.groupby(['Marital_Status','Gender'],as_index=False)['Amount'].sum().sort_values(by='Amount',ascending=False).head(10)  # head is used to get top 5,10 whatever value is given
sns.set(rc={'figure.figsize':(7,5)})
sns.barplot(data=sales_state,x='Marital_Status',y='Amount',hue='Gender')
# plt.title('Amount')

"""**Occupation**"""

sns.set(rc={'figure.figsize':(20,5)})
ax=sns.countplot(data=df,x='Occupation')
for bars in ax.containers:
  ax.bar_label(bars)

sales_state=df.groupby(['Occupation'],as_index=False)['Amount'].sum().sort_values(by='Amount',ascending=False).head(10)  # head is used to get top 5,10 whatever value is given
sns.set(rc={'figure.figsize':(15,5)})
sns.barplot(data=sales_state,x='Occupation',y='Amount')
# plt.title('Amount')

"""**Product Category**"""

sns.set(rc={'figure.figsize':(30,5)})
ax=sns.countplot(data=df,x='Product_Category')
for bars in ax.containers:
  ax.bar_label(bars)

sales_state=df.groupby(['Product_Category'],as_index=False)['Amount'].sum().sort_values(by='Amount',ascending=False).head(10)  # head is used to get top 5,10 whatever value is given
sns.set(rc={'figure.figsize':(23,7)})
sns.barplot(data=sales_state,x='Product_Category',y='Amount')
# plt.title('Amount')

sales_state=df.groupby(['Product_Category','Gender'],as_index=False)['Amount'].sum().sort_values(by='Amount',ascending=False).head(10)  # head is used to get top 5,10 whatever value is given
sns.set(rc={'figure.figsize':(23,7)})
sns.barplot(data=sales_state,x='Product_Category',y='Amount',hue='Gender')
# plt.title('Amount')

sales_state=df.groupby(['Product_ID'],as_index=False)['Orders'].sum().sort_values(by='Orders',ascending=False).head(10)  # head is used to get top 5,10 whatever value is given
sns.set(rc={'figure.figsize':(23,7)})
sns.barplot(data=sales_state,x='Product_ID',y='Orders')
# plt.title('Amount')

#  Top 10 most sold products (same as above)
fig1,ax1=plt.subplots(figsize=(12,7))
df.groupby('Product_ID')['Orders'].sum().nlargest(10).sort_values(ascending=False).plot(kind='bar')

"""**conclusion**

*Married women of age group 26-35 from up,Maharastra and karnataka working in IT,Healthcare and Aviation are likely to buy more product from food,Clothing and Electroics category*
"""